- name: LEPHARE - Check for cachetool.phar
  stat: path={{ lephare_cachetool_path }}
  register: cachetool_file
  failed_when: cachetool_file.stat.exists and cachetool_file.stat.isdir

- name: LEPHARE - get cachetool version
  shell: chdir={{ ansistrano_release_path.stdout }}
    {{ symfony_php_path }} {{ lephare_cachetool_path }} --version | awk '/^CacheTool / { print $2 }'
  register: cachetool_version
  when: cachetool_file.stat.exists

- name: LEPHARE - Set cachetool facts based on PHP version
  set_fact:
    cachetool_facts:
      required_version: |-
        {{
          'latest' if php_facts.version is version('8.0', '>=') else
          '7.1.0'  if php_facts.version is version('7.3', '>=') else
          '5.1.3'  if php_facts.version is version('7.2', '>=') else
          '4.1.1'  if php_facts.version is version('7.1', '>=') else
          '3.2.2'
        }}

- name: LEPHARE - Install latest cachetool
  get_url: url=http://gordalina.github.io/cachetool/downloads/cachetool.phar dest={{ lephare_cachetool_path }} mode=0755 validate_certs=no force=no
  when: |-
    not cachetool_file.stat.exists
    and cachetool_facts.required_version == 'latest'

- name: LEPHARE - Install {{ cachetool_facts.required_version }} cachetool
  get_url: url=https://github.com/gordalina/cachetool/releases/download/{{ cachetool_facts.required_version }}/cachetool.phar dest={{ lephare_cachetool_path }} mode=0755 validate_certs=no force=no
  when: |-
    cachetool_facts.required_version != 'latest' and (
      not cachetool_file.stat.exists
      or cachetool_version.stdout is version(cachetool_facts.required_version, '<')
    )

- name: LEPHARE - Run cachetool self-update
  ignore_errors: true
  shell: chdir={{ ansistrano_release_path.stdout }}
    {{ symfony_php_path }} {{ lephare_cachetool_path }} self-update
  when: cachetool_file.stat.exists and lephare_cachetool_self_update and cachetool_facts.required_version == 'latest'
  register: cachetool_self_update_result
  changed_when: cachetool_self_update_result.stderr

- name: LEPHARE - get new cachetool version
  shell: chdir={{ ansistrano_release_path.stdout }}
    {{ symfony_php_path }} {{ lephare_cachetool_path }} --version | awk '/^CacheTool / { print $2 }'
  register: cachetool_version

- name: LEPHARE - Generate cachetool configuration
  ansible.builtin.template:
    src: cachetool/cachetool.yaml.j2
    dest: "{{ lephare_cachetool_path | dirname }}/.cachetool.yaml"
    mode: 0600

- name: LEPHARE - Run cachetool stat:clear
  shell: chdir={{ ansistrano_release_path.stdout }}
    {{ symfony_php_path }} {{ lephare_cachetool_path }} stat:clear {{ lephare_cachetool_options }}
  when: lephare_cachetool_stat_clear
  retries: "{{ lephare_cachetool_retries | int }}"
  delay: "{{ lephare_cachetool_delay | int }}"
  register: cachetool_stat_clear
  until: cachetool_stat_clear.rc == 0

- name: LEPHARE - Run cachetool opcache:reset
  shell: chdir={{ ansistrano_release_path.stdout }}
    {{ symfony_php_path }} {{ lephare_cachetool_path }} opcache:reset {{ lephare_cachetool_options }}
  when: lephare_cachetool_opcache_reset
  retries: "{{ lephare_cachetool_retries | int }}"
  delay: "{{ lephare_cachetool_delay | int }}"
  register: cachetool_opcache_result
  until: cachetool_opcache_result.rc == 0

- name: LEPHARE - Run cachetool apcu:cache:clear
  shell: chdir={{ ansistrano_release_path.stdout }}
    {{ symfony_php_path }} {{ lephare_cachetool_path }} apcu:cache:clear {{ lephare_cachetool_options }}
  when: lephare_cachetool_apcu_clear
  retries: "{{ lephare_cachetool_retries | int }}"
  delay: "{{ lephare_cachetool_delay | int }}"
  register: cachetool_apcu_result
  until: cachetool_apcu_result.rc == 0
